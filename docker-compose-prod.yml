version: "3.0"

services:
  web:
    image: nginx
    container_name: th_web
    restart: always
    depends_on:
    - app
    ports:
    - "127.0.0.1:8080:80"
    - "127.0.0.1:8443:443"
    volumes:
    - ./docker/letsencrypt:/etc/letsencrypt:Z
    - ./docker/nginx-conf:/etc/nginx/conf.d:Z
    - rails-static:/opt/rails-static

  app:
    image: sbaird/tiddlyhost:latest
    container_name: th_app
    restart: always
    depends_on:
    - db
    - cache

    volumes:
    - ./docker/log:/var/log/app:Z
    - ./docker/secrets/master.key:/opt/app/config/master.key:Z,ro
    - ./docker/secrets/credentials.yml.enc:/opt/app/config/credentials.yml.enc:Z,ro
    - ./docker/config/settings_local.yml:/opt/app/config/settings_local.yml:Z,ro
    - ./docker/config/prerelease.html:/opt/app/tw_content/empties/prerelease.html:Z
    - rails-static:/opt/app/public

    security_opt:
    # Todo: Figure out what syscalls chrome sandbox really needs
    # and use an appropriate policy
    - "seccomp:unconfined"

    build:
      context: .
      dockerfile: docker/Dockerfile.prod
    restart: unless-stopped

  jobs:
    image: sbaird/tiddlyhost:latest
    container_name: th_jobs
    restart: always
    depends_on:
    - db
    - cache

    volumes:
    - ./docker/log:/var/log/app:Z
    - ./docker/secrets/master.key:/opt/app/config/master.key:Z,ro
    - ./docker/secrets/credentials.yml.enc:/opt/app/config/credentials.yml.enc:Z,ro
    - ./docker/config/settings_local.yml:/opt/app/config/settings_local.yml:Z,ro

    command: /bin/start-delayed-job.sh
    restart: unless-stopped

    security_opt:
    # Todo: Figure out what syscalls chrome sandbox really needs
    # and use an appropriate policy
    - "seccomp:unconfined"
    restart: unless-stopped

  cache:
    image: memcached
    container_name: th_cache
    command: memcached -I 8M
    restart: unless-stopped

  db:
    image: postgres:13
    container_name: th_db
    environment:
      # (For a brand new fresh deploy you should put the real password here)
      POSTGRES_PASSWORD: postgres
    volumes:
    - ./docker/postgresql-data/data:/var/lib/postgresql/data:Z
    restart: unless-stopped

volumes:
  # Share rails public with nginx so it can serve static files directly
  rails-static:
